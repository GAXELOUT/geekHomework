# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

l1 = [True,'name','100',100,False]
for i in l1:
    print(type(i))

# 2. Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input()

i = 0
j = 0
l1 = []
n = int(input('Введите кол-во желаемых элементов :'))
while i < n:
    i = i + 1
    l1.append(input(f'Введите {i}-й элемент списка : '))
for i in range(int(len(l1)/2)):
  l1[j], l1[j+1] = l1[j+1], l1[j]
  j += 2
print(l1)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

month = ['January','February','March','April','May','June','July','August','September','October','November','December']
season = ['Зима','Весна','Лето','Осень','Зима']
a = int(input('Введите номер месяца '))
if 0 < a <= 12 :
    print(f'Месяц под номером {a} это : {month[a-1]} и это {season[a//3]}')

else:
    print('Такого месяца нет')

#Второй вариант

month2 = {1:'Зима',2:'Зима',3:'Весна',4:'Весна',5:'Весна',6:'Лето',7:'Лето',8:'Лето',9:'Осень',10:'Осень',11:'Осень',12:'Зима'}
a2 = int(input('Введите номер месяца '))
print(f'Месяц под номером {a2} это : {month2[a2]}')

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.

a = input('Введите строку для разбивания ')
l2 = a.split()
i = 0;
while i < len(l2):
    print(f'{i+1} : {l2[i]}')
    i+=1

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# # У пользователя необходимо запрашивать новый элемент рейтинга.
# # Если в рейтинге существуют элементы с одинаковыми значениями,
# # то новый элемент с тем же значением должен разместиться после них.


my_list = [10,7,7,7,7,6,6]

a = int(input('Введите элемент для добавления'))
i = 0;
for f in my_list:
    if f >= a :
        i += 1
my_list.insert(i,a)
print(my_list)

